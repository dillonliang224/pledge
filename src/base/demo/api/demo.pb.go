// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api/demo.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	io "io"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SmsType int32

const (
	SmsType_Login SmsType = 0
	SmsType_Bind  SmsType = 1
	SmsType_VIP   SmsType = 2
)

var SmsType_name = map[int32]string{
	0: "Login",
	1: "Bind",
	2: "VIP",
}

var SmsType_value = map[string]int32{
	"Login": 0,
	"Bind":  1,
	"VIP":   2,
}

func (x SmsType) String() string {
	return proto.EnumName(SmsType_name, int32(x))
}

func (SmsType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_982f2043e503afee, []int{0}
}

type SendSmsReq struct {
	Group                string   `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Mobile               int64    `protobuf:"varint,2,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Type                 SmsType  `protobuf:"varint,3,opt,name=type,proto3,enum=pushpb.SmsType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendSmsReq) Reset()         { *m = SendSmsReq{} }
func (m *SendSmsReq) String() string { return proto.CompactTextString(m) }
func (*SendSmsReq) ProtoMessage()    {}
func (*SendSmsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_982f2043e503afee, []int{0}
}
func (m *SendSmsReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SendSmsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SendSmsReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SendSmsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendSmsReq.Merge(m, src)
}
func (m *SendSmsReq) XXX_Size() int {
	return m.Size()
}
func (m *SendSmsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SendSmsReq.DiscardUnknown(m)
}

var xxx_messageInfo_SendSmsReq proto.InternalMessageInfo

func (m *SendSmsReq) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *SendSmsReq) GetMobile() int64 {
	if m != nil {
		return m.Mobile
	}
	return 0
}

func (m *SendSmsReq) GetType() SmsType {
	if m != nil {
		return m.Type
	}
	return SmsType_Login
}

type SendSmsRes struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendSmsRes) Reset()         { *m = SendSmsRes{} }
func (m *SendSmsRes) String() string { return proto.CompactTextString(m) }
func (*SendSmsRes) ProtoMessage()    {}
func (*SendSmsRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_982f2043e503afee, []int{1}
}
func (m *SendSmsRes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SendSmsRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SendSmsRes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SendSmsRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendSmsRes.Merge(m, src)
}
func (m *SendSmsRes) XXX_Size() int {
	return m.Size()
}
func (m *SendSmsRes) XXX_DiscardUnknown() {
	xxx_messageInfo_SendSmsRes.DiscardUnknown(m)
}

var xxx_messageInfo_SendSmsRes proto.InternalMessageInfo

func (m *SendSmsRes) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func init() {
	proto.RegisterEnum("pushpb.SmsType", SmsType_name, SmsType_value)
	proto.RegisterType((*SendSmsReq)(nil), "pushpb.SendSmsReq")
	proto.RegisterType((*SendSmsRes)(nil), "pushpb.SendSmsRes")
}

func init() { proto.RegisterFile("api/demo.proto", fileDescriptor_982f2043e503afee) }

var fileDescriptor_982f2043e503afee = []byte{
	// 237 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4b, 0x2c, 0xc8, 0xd4,
	0x4f, 0x49, 0xcd, 0xcd, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2b, 0x28, 0x2d, 0xce,
	0x28, 0x48, 0x52, 0x8a, 0xe7, 0xe2, 0x0a, 0x4e, 0xcd, 0x4b, 0x09, 0xce, 0x2d, 0x0e, 0x4a, 0x2d,
	0x14, 0x12, 0xe1, 0x62, 0x4d, 0x2f, 0xca, 0x2f, 0x2d, 0x90, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c,
	0x82, 0x70, 0x84, 0xc4, 0xb8, 0xd8, 0x72, 0xf3, 0x93, 0x32, 0x73, 0x52, 0x25, 0x98, 0x14, 0x18,
	0x35, 0x98, 0x83, 0xa0, 0x3c, 0x21, 0x65, 0x2e, 0x96, 0x92, 0xca, 0x82, 0x54, 0x09, 0x66, 0x05,
	0x46, 0x0d, 0x3e, 0x23, 0x7e, 0x3d, 0x88, 0x91, 0x7a, 0xc1, 0xb9, 0xc5, 0x21, 0x95, 0x05, 0xa9,
	0x41, 0x60, 0x49, 0x25, 0x19, 0x24, 0x0b, 0x8a, 0x85, 0xf8, 0xb8, 0x98, 0xf2, 0xb3, 0xc1, 0xa6,
	0x73, 0x04, 0x31, 0xe5, 0x67, 0x6b, 0xa9, 0x73, 0xb1, 0x43, 0x95, 0x0b, 0x71, 0x72, 0xb1, 0xfa,
	0xe4, 0xa7, 0x67, 0xe6, 0x09, 0x30, 0x08, 0x71, 0x70, 0xb1, 0x38, 0x65, 0xe6, 0xa5, 0x08, 0x30,
	0x0a, 0xb1, 0x73, 0x31, 0x87, 0x79, 0x06, 0x08, 0x30, 0x19, 0x59, 0x72, 0xb1, 0x04, 0x94, 0x16,
	0x67, 0x08, 0x19, 0x72, 0xb1, 0x43, 0x8d, 0x13, 0x12, 0x82, 0x5b, 0x08, 0xf7, 0x80, 0x14, 0xa6,
	0x58, 0xb1, 0x93, 0xe8, 0x89, 0x47, 0x72, 0x8c, 0x17, 0x1e, 0xc9, 0x31, 0x3e, 0x78, 0x24, 0xc7,
	0x38, 0xe3, 0xb1, 0x1c, 0x43, 0x14, 0x73, 0x62, 0x41, 0x66, 0x12, 0x1b, 0x38, 0x20, 0x8c, 0x01,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x40, 0x4d, 0xe0, 0x11, 0x1a, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PushClient is the client API for Push service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PushClient interface {
	SendSms(ctx context.Context, in *SendSmsReq, opts ...grpc.CallOption) (*SendSmsRes, error)
}

type pushClient struct {
	cc *grpc.ClientConn
}

func NewPushClient(cc *grpc.ClientConn) PushClient {
	return &pushClient{cc}
}

func (c *pushClient) SendSms(ctx context.Context, in *SendSmsReq, opts ...grpc.CallOption) (*SendSmsRes, error) {
	out := new(SendSmsRes)
	err := c.cc.Invoke(ctx, "/pushpb.Push/SendSms", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PushServer is the server API for Push service.
type PushServer interface {
	SendSms(context.Context, *SendSmsReq) (*SendSmsRes, error)
}

func RegisterPushServer(s *grpc.Server, srv PushServer) {
	s.RegisterService(&_Push_serviceDesc, srv)
}

func _Push_SendSms_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendSmsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushServer).SendSms(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pushpb.Push/SendSms",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushServer).SendSms(ctx, req.(*SendSmsReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Push_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pushpb.Push",
	HandlerType: (*PushServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendSms",
			Handler:    _Push_SendSms_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/demo.proto",
}

func (m *SendSmsReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SendSmsReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Group) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintDemo(dAtA, i, uint64(len(m.Group)))
		i += copy(dAtA[i:], m.Group)
	}
	if m.Mobile != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintDemo(dAtA, i, uint64(m.Mobile))
	}
	if m.Type != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintDemo(dAtA, i, uint64(m.Type))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *SendSmsRes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SendSmsRes) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Ok {
		dAtA[i] = 0x8
		i++
		if m.Ok {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintDemo(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *SendSmsReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Group)
	if l > 0 {
		n += 1 + l + sovDemo(uint64(l))
	}
	if m.Mobile != 0 {
		n += 1 + sovDemo(uint64(m.Mobile))
	}
	if m.Type != 0 {
		n += 1 + sovDemo(uint64(m.Type))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SendSmsRes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Ok {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovDemo(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozDemo(x uint64) (n int) {
	return sovDemo(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SendSmsReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDemo
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SendSmsReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SendSmsReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Group", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDemo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDemo
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDemo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Group = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mobile", wireType)
			}
			m.Mobile = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDemo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mobile |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDemo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= SmsType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDemo(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDemo
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthDemo
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SendSmsRes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDemo
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SendSmsRes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SendSmsRes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ok", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDemo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Ok = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipDemo(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthDemo
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthDemo
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDemo(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDemo
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDemo
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDemo
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthDemo
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthDemo
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowDemo
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipDemo(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthDemo
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthDemo = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDemo   = fmt.Errorf("proto: integer overflow")
)
